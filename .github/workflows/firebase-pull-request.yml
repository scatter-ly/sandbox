# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting in GCP Product Development on PR
on:
  pull_request:
    paths:
      - src/**
      - public/**
      - package.json

jobs:
  build_and_preview:
    environment:
      name: dev
      url: https://sandbox.dev.scatter.ly
    env:
      CI: true
      NODE_OPTIONS: --max-old-space-size=4096

    if: '${{ github.event.pull_request.head.repo.full_name == github.repository }}'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # since create-react-app only only uses NODE_ENV of production when running yarn build
      # we'll copy the .env.test to .env.production for deploying to GCP Product Development
      - name: Create Google SA file
        run: |
          echo "$FIREBASE_SERVICE_ACCOUNT" | base64 --decode > firebase-sa.json
          chmod 600 firebase-sa.json
        env:
          REACT_APP_GCP_ERRORS_PROJECT_KEY: '${{ secrets.GCP_ERRORS_ACCOUNT_PRODUCT_DEVELOPMENT }}'
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SA_PRODUCT_DEVELOPMENT_BASE64 }}

      # BEGIN yarn setup
      # The caching in the action does not cache node_modules which is needed to avoid reinstalling
      # Also want to cache the dist directory to avoid rebuilding later for deployment
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'

      - name: cache all node_modules
        id: cache-modules
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-v16-node_modules-client-portal-${{ hashFiles('yarn.lock', 'package.json') }}

      # If we get a cache hit for node_modules, there's no need to run yarn install
      # as all dependencies will be installed already.
      - name: yarn install
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      # END yarn setup

      - name: check for yarn.lock changes
        id: yarn-lock
        run: git diff --quiet origin/main HEAD -- yarn.lock
        continue-on-error: true

      - name: lock
        run: yarn lock:check

      - name: type checking and declarations
        run: |
          echo "Checking type"

      # Using env:dev since this is a Firebase generated URL and env:dev does not change the authDomain
      - name: Build app
        id: yarn-clean-build
        run: |
          export GOOGLE_APPLICATION_CREDENTIALS=${PWD}/firebase-sa.json
          yarn clean && yarn env:dev

      - name: Deploy to Firebase Hosting in Product Development
        id: firebase_hosting_preview
        run: |
          echo "Deploy to Firebase Hosting in Dev"
